---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: slvs.k8s.amagi.com
spec:
  group: k8s.amagi.com
  names:
    kind: SLV
    listKind: SLVList
    plural: slvs
    singular: slv
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: SLV is the Schema for the slv API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          slvConfig:
            properties:
              hashLength:
                format: int32
                type: integer
              publicKey:
                type: string
              wrappedKeys:
                items:
                  type: string
                type: array
            required:
            - publicKey
            - wrappedKeys
            type: object
          slvSecrets:
            additionalProperties:
              type: string
            type: object
          status:
            description: SLVStatus defines the observed state of SLV
            properties:
              error:
                type: string
            type: object
        required:
        - metadata
        - slvConfig
        - slvSecrets
        type: object
    served: true
    storage: true
    subresources:
      status: {}
